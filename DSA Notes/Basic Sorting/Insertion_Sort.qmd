## ðŸ“Œ Insertion Sort

### ðŸ“– Theory

Take the first element from unsorted part, and put it at its correct position in sorted part.

---

**Steps:**

1. Start from the second element (index 1).
2. Compare it with elements before it.
3. Shift larger elements one position to the right.
4. Insert the current element into the correct position.
5. Repeat for all elements.

**Time Complexity:**

- Best: O(n) _(when already sorted)_
- Average: O(nÂ²)
- Worst: O(nÂ²)

**Space Complexity:** O(1)

- **Stable:** âœ… Yes
- **In-place:** âœ… Yes

---

### âœ… Code (C++)

```cpp
void insertionSort(vector<int>& arr) {
    int n = arr.size();
    for (int i = 1; i < n; i++) {
        int key = arr[i];
        int j = i - 1;

        // Move elements greater than key to one position ahead
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j--;
        }

        arr[j + 1] = key;
    }
}
```
